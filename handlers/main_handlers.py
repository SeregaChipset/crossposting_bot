from aiogram import Router, F
from aiogram.filters import Command, CommandStart, StateFilter, BaseFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message


router: Router = Router()


class AdminFilter(BaseFilter):  # [1]
    async def __call__(self, message: Message) -> bool:  # [3]
        return message.from_user.username in {'SeregaChipset', 'Veronica_Friesen', 'roxxenya', 'ChipsetPlus'}

@router.channel_post(Command(commands='get_chat_id'))
async def get_chat_id(message: Message):
    chat_id = message.chat.id
    await message.reply(f"Chat ID: {chat_id}")


@router.message(CommandStart(), StateFilter(default_state), AdminFilter())
async def process_start_command(message: Message):
    post_button = InlineKeyboardButton(
        text='–ü–æ—Å—Ç üìù',
        callback_data='/post'
    )
    zakaz_button = InlineKeyboardButton(
        text='–ó–∞–∫–∞–∑ üõ†Ô∏è',
        callback_data='/zakaz'
    )
    setting_button = InlineKeyboardButton(
        text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è',
        callback_data='/setting'
    )
    keyboard: list[list[InlineKeyboardButton]] = [
        [post_button, zakaz_button, setting_button]
    ]
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    await message.answer(
        text='<b>–ö—Ä–æ—Å—Å–ø–æ—Å—Ç–∏–Ω–≥ –±–æ—Ç —Ä–∞–∑–º–µ—Å—Ç–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥–µ –∏ –≤–∫</b>\n\n'
             '1) –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞; \n'
             '2) –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–∫–∞–∑—É livesklad; \n'
             '3) –ù–∞—Å—Ç—Ä–æ–π–∫–∏(—Ç–æ–∫–µ–Ω—ã, –ø–æ–¥–≤–∞–ª, –ø—Ä–∏–º–µ—Ä –ø–æ—Å—Ç–∞). \n',
        reply_markup=markup
    )


# —Ö–µ–Ω–¥–ª–µ—Ä—ã –æ—Ç–º–µ–Ω—ã
@router.callback_query(StateFilter(default_state), F.data == '/cancel')
async def process_cancel_command(message: Message):
    await message.answer(
        text='–û—Ç–º–µ–Ω—è—Ç—å –Ω–µ—á–µ–≥–æ.'
    )


@router.callback_query(~StateFilter(default_state), F.data == '/cancel')
async def process_cancel_command_state(callback: CallbackQuery, state: FSMContext):
    await callback.answer(
        text='–ù–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é.\n–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã.'
    )
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.clear()
    await process_start_command(callback.message)


